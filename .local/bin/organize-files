#!/bin/bash

# Check if the correct number of arguments is provided
if [ "$#" -ne 2 ]; then
  echo "Usage: $0 <source_directory> <destination_directory>"
  exit 1
fi

# Root directory to organize
ROOT_DIR=$(realpath "$1")

# Destination root for organized files
DEST_DIR=$(realpath "$2")

# Validate that ROOT_DIR exists
if [ ! -d "$ROOT_DIR" ]; then
  echo "Error: Source directory '$ROOT_DIR' does not exist."
  exit 1
fi

# Validate that DEST_DIR is writable
if [ ! -w "$(dirname "$DEST_DIR")" ]; then
  echo "Error: Destination directory '$DEST_DIR' is not writable."
  exit 1
fi

# Function to create a directory if it doesn't exist
create_dir_if_not_exists() {
  local dir=$1
  if [ ! -d "$dir" ]; then
    mkdir -p "$dir"
  fi
}

# Function to move files into category folders by date
organize_files() {
  local category=$1
  local files_list=$2

  # Create the category directory
  CATEGORY_DIR="$DEST_DIR/$category"
  create_dir_if_not_exists "$CATEGORY_DIR"

  # Find and organize files by extension
  echo "$files_list" | while IFS= read -r file; do
    # Cateogrize by date
    # Get file's modification date (Year-Month)
    # FILE_DATE=$(date -r "$file" +"%Y-%m")
    # YEAR_MONTH_DIR="$CATEGORY_DIR/$FILE_DATE"
    # create_dir_if_not_exists "$YEAR_MONTH_DIR"

    # Get only base directory
    # DEST="$(basename "$(dirname "$file")")"

    # Preserve folder structure
    # Preserve folder nesting relative to parent directory
    # echo "dest 1: $DEST"
    DEST=${file#"$ROOT_DIR/"}
    DEST="$CATEGORY_DIR/$DEST"
    DEST="$(dirname "$DEST")"
    create_dir_if_not_exists "$DEST"

    # Debugging output
    # echo "Moving '$file' to '$YEAR_MONTH_DIR/'"
    echo "Coping '$file' to '$DEST/'"

    # Move the file
    # mv -n "$file" "$YEAR_MONTH_DIR/"
    cp "$file" "$DEST/"
  done
}

# Organize documents
documents=$(find "$ROOT_DIR" -type f \( -iname '*.txt' -o -iname '*.pdf' -o -iname '*.docx' -o -iname '*.doc' -o -iname '*.xls' -o -iname '*.xlsx' -o -iname '*.ppt' -o -iname '*.pptx' -o -iname '*.odt' -o -iname '*.rtf' \))
organize_files "Documents" "$documents"

# Organize images
images=$(find "$ROOT_DIR" -type f \( -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.png' -o -iname '*.gif' -o -iname '*.bmp' -o -iname '*.tiff' -o -iname '*.webp' -o -iname '*.svg' \))
organize_files "Images" "$images"

# Organize videos
videos=$(find "$ROOT_DIR" -type f \( -iname '*.mp4' -o -iname '*.avi' -o -iname '*.mkv' -o -iname '*.mov' -o -iname '*.wmv' -o -iname '*.flv' -o -iname '*.mpeg' \))
organize_files "Videos" "$videos"

# Organize audio
audio=$(find "$ROOT_DIR" -type f \( -iname '*.mp3' -o -iname '*.wav' -o -iname '*.flac' -o -iname '*.aac' -o -iname '*.ogg' -o -iname '*.m4a' -o -iname '*.wma' \))
organize_files "Audio" "$audio"

# Optional: Remove empty directories
find "$ROOT_DIR" -type d -empty -delete

echo "Files have been organized into $DEST_DIR."
