#!/bin/bash

select_quality() {
	# Menu for selecting video quality
	echo "Select video quality:"
	options=("1080p" "720p" "480p" "360p" "240p" "144p" "Exit")
	select opt in "${options[@]}"; do
		case $opt in
		"1080p")
			FORMAT="bestvideo[height<=1080]+bestaudio/best"
			break
			;;
		"720p")
			FORMAT="bestvideo[height<=720]+bestaudio/best"
			break
			;;
		"480p")
			FORMAT="bestvideo[height<=480]+bestaudio/best"
			break
			;;
		"360p")
			FORMAT="bestvideo[height<=360]+bestaudio/best"
			break
			;;
		"240p")
			FORMAT="bestvideo[height<=240]+bestaudio/best"
			break
			;;
		"144p")
			FORMAT="bestvideo[height<=144]+bestaudio/best"
			break
			;;
		"Exit")
			exit
			;;
		*) echo "invalid option $REPLY" ;;
		esac
	done
}

# Check if yt-dlp is installed
if ! command -v yt-dlp &>/dev/null; then
	echo "yt-dlp could not be found. Please install it first."
	exit
fi

# Check if jq is installed
if ! command -v jq &>/dev/null; then
	echo "jq could not be found. Please install it first."
	exit 1
fi

# Check if a video URL is provided
if [ -z "$1" ]; then
	echo "No video URL provided. Usage: ./download_video <video_url>"
	exit
fi

INPUT_URL="$1"
YOUTUBE_DIR="/mnt/d/data/media/videos/youtube"
# YOUTUBE_DIR="/home/$USER/yt" # used for development

select_quality

if [[ $INPUT_URL =~ /playlist\?list= ]]; then
	# Prefix playlist index with "-" separator, but only if it is available
	CHANNEL_DIR="$YOUTUBE_DIR/%(playlist_uploader)s"
	OUTPUT_DIR="$CHANNEL_DIR/%(playlist_title)s"
	FILENAME="%(playlist_index&{}-|)s%(title)s.%(ext)s"

	METADATA=$(yt-dlp --dump-json --flat-playlist --no-download "$INPUT_URL")
	UPLOADER="$(echo "$METADATA" | jq -r '.playlist_uploader' | head -1)"
	PLAYLIST_TITLE="$(echo "$METADATA" | jq -r '.playlist_title' | head -1)"
	ACTUAL_OUTPUT_DIR="$YOUTUBE_DIR/$UPLOADER/$PLAYLIST_TITLE"

	ARCHIVE_FILE="$ACTUAL_OUTPUT_DIR/archive.log"
else
	METADATA=$(yt-dlp --dump-json --no-download "$INPUT_URL" | jq -r '.')
	UPLOADER=$(echo "$METADATA" | jq -r '.uploader')
	TITLE=$(echo "$METADATA" | jq -r '.title')
	ACTUAL_OUTPUT_DIR="$YOUTUBE_DIR/$UPLOADER/$TITLE"

	CHANNEL_DIR="$YOUTUBE_DIR/%(uploader)s"
	OUTPUT_DIR="$CHANNEL_DIR/%(title)s"
	FILENAME="%(title)s.%(ext)s"
fi

OUTPUT_FILENAME="$OUTPUT_DIR/$FILENAME"
THUMBNAIL_PATH="thumbnail:$OUTPUT_DIR/thumbnails/$FILENAME"
SUBTITLE_PATH="subtitle:$OUTPUT_DIR/subtitles/$FILENAME"
DESCRIPTION="description:$OUTPUT_DIR/descriptions/$FILENAME"

yt-dlp \
	-f "$FORMAT" \
	-o "$OUTPUT_FILENAME" \
	-o "$THUMBNAIL_PATH" \
	-o "$SUBTITLE_PATH" \
	-o "$DESCRIPTION" \
	--embed-metadata \
	--embed-chapters \
	--embed-subs \
	--embed-thumbnail \
	--write-description \
	--write-thumbnail \
	--write-subs \
	--write-auto-subs \
	--sub-lang en,ar \
	--convert-subs srt \
	--convert-thumbnails png \
	--concurrent-fragments 5 \
	--merge-output-format mp4 \
	--sponsorblock-mark all \
	${ARCHIVE_FILE:+--download-archive "$ARCHIVE_FILE"} \
	"$INPUT_URL"

# Ensure the directory exists
mkdir -p "$ACTUAL_OUTPUT_DIR"

# Save the URL to the file
echo "$INPUT_URL" >"$ACTUAL_OUTPUT_DIR/url.txt"
